<glyphspec>
	<glyphset>
		<collect>
			<file>plane00/unifont-base.hex</file>
			<file>plane00/wqy.hex</file>
			<file>plane00/hangul-syllables.hex</file>
			<file>plane00/spaces.hex</file>
			<file>plane00/plane00-unassigned.hex</file>
			<file>plane00/plane00-nonprinting.hex</file>
			<file>plane00/custom00.hex</file>
		</collect>
		<output>unifont-$VERSION.hex</output>
	</glyphset>

	<glyphset>
		<collect>
			<file>plane00/copyleft.hex</file>
			<file>plane00/hangul-syllables.hex</file>
			<file>plane00/plane00-unassigned.hex</file>
			<file>plane00/spaces.hex</file>
			<file>plane00/wqy.hex</file>
			<file>plane00/custom00.hex</file>
			<file>plane00/omit.hex</file>
			<file>plane00/pua.hex</file>
			<file>plane00/unifont-base.hex</file>
		</collect>

		<addcircles>
			<file>plane00-combining.txt</file>
		</addcircles>

		<collect>
			<file>plane00/plane00-nonprinting.hex</file>
		</collect>

		<exclude from="FFFE" to="FFFF"/>
		<exclude codepoint="01F12F"/>
		<output>unifont_sample-$VERSION.hex</output>
	</glyphset>

	<glyphset>
		<file>plane01/noscript.hex</file>
		<file>plane01/plane01-nonprinting.hex</file>
		<file>plane01/plane01-unassigned.hex</file>
		<file>plane01/plane01.hex</file>
		<file>plane01/space.hex</file>
		<file>plane0E/plane0E-nonprinting.hex</file>
		<file>plane0E/plane0E.hex</file>
		<output>unifont_upper-$VERSION.hex</output>
	</glyphset>

	<glyphset>
		<collect>
			<file>plane01/plane01-combining.txt</file>
			<file>plane0E/plane0E-combining.txt</file> 
		</collect>
		<output>upper_combining.txt</output>
	</glyphset>

	<glyphset>
		<collect>
			plane01-nonprinting.hex
			plane0E-nonprinting.hex
		</collect>
		<output>upper_nonprinting.hex</output>
	</glyphset>

	# Generate files in plane01/all directory to create font sample book.
	~ run from plane01/Makefile
	~~ generate glyphs for each codepoint or codepoint range in plane01/unassigned-ranges.txt
	~~ write to plane01/plane01-unassigned.hex
	~~ generate glyphs for each codepoint or codepoint range in plane01/noscript-ranges.txt
	~~ write to out/noscript.hex
	~~ write unique glyphs from plane01/*.hex to plane01/all/plane01-all.hex
	~ end snippet
	~ load glyphs from plane01/all/plane01-all.hex, plane0E/plane0E-nonprinting.hex, and plane0E/plane0E.hex
	~ remove codepoints ..FFFE and ..FFFF where . is any digit
	~ generate circles for glyphs in out/upper_combining.txt but not in out/upper_nonprinting.hex
	~ write glyphs to out/unifont_upper_sample-$(VERSION).hex

	# Create a .hex file with CSUR glyphs, without combining circles
	~ write glyphs from out/unifont$(VERSION).hex and plane00csur/*.hex to out/unifont_csur_lower-$(VERSION).hex
	~ > plane00csur-spaces.hex
	~ > plane00csur.hex
	~ > space.hex

	# Create a .hex file with only CSUR glyphs from all planes
	~ write glyphs from plane00csur/*.hex and plane0F/plane0Fcsur.hex to out/unifont_csur-$(VERSION).hex
	~ > plane00csur/plane00csur-spaces.hex
	~ > plane00csur/plane00csur.hex
	~ > plane00csur/space.hex

	# Create a .hex file with all CSUR glyphs, with combining circles
	~ write combined contents of plane00csur/plane00csur-combining.txt and plane0Fcsur/plane0Fcsur-combining.txt to out/csur_combining.txt

	~ read out/unifont_csur-$(VERSION).hex
	~ generate circles for characters in out/csur_combining.txt and not in plane00/plane00-nonprinting.hex
	~ write to out/unifont_csur_sample-$(VERSION).hex


</glyphspec>
